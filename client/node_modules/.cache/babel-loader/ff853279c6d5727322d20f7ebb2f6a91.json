{"ast":null,"code":"import _slicedToArray from\"/Users/lauraaupert/Desktop/Dan/OxyMagic/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{Form,Col,Row,Button,Accordion,Card,Table}from'react-bootstrap';import api from'../../utils/api';function JobRow(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),products=_useState2[0],setProducts=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),quantity=_useState4[0],setQuantity=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),date=_useState6[0],setDate=_useState6[1];// const [ jobType, setJobType ] = useState({}) //product group\nvar _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),index=_useState8[0],setIndex=_useState8[1];var _useState9=useState(Number),_useState10=_slicedToArray(_useState9,2),price=_useState10[0],setPrice=_useState10[1];var _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),code=_useState12[0],setCode=_useState12[1];var _useState13=useState({}),_useState14=_slicedToArray(_useState13,2),product=_useState14[0],setProduct=_useState14[1];var total=quantity*price;var tax=(total*1.06625).toFixed(2);var jobID=(Math.random()*1000).toFixed(0);var customerID=7832;var today=new Date();var dd=today.getDate();var mm=today.getMonth()+1;var yyyy=today.getFullYear();if(dd<10){dd=\"0\"+dd;}if(mm<10){mm=\"0\"+mm;}today=yyyy+\"-\"+mm+\"-\"+dd;function handleSubmit(e){e.preventDefault();api.saveJob(jobID,customerID,date,product,quantity,tax);}useEffect(function(){api.getProducts().then(function(res){console.log(res.data);setProducts(res.data);}).catch(function(error){console.log('Error getting fake data: '+error);});},[]);function handleChange(e){setProduct(products[parseFloat(e.target.value)]);}useEffect(function(){setPrice(product.price);setCode(product.code);},[product]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",custom:true,onChange:handleChange,style:{width:\"250px\"}},/*#__PURE__*/React.createElement(\"option\",{key:\"default\"},\"Choose a Product\"),products.map(function(item,index){return/*#__PURE__*/React.createElement(\"option\",{key:index,value:index},item.name);})),/*#__PURE__*/React.createElement(\"td\",{style:{width:\"100px\"}},/*#__PURE__*/React.createElement(\"input\",{style:{width:\"50px\"},defaultValue:1,onChange:function onChange(e){return setQuantity(parseInt(e.target.value));},value:quantity})),/*#__PURE__*/React.createElement(\"td\",{style:{width:\"100px\"}},\"$\",price),/*#__PURE__*/React.createElement(\"td\",{style:{width:\"100px\"}},\"$\",total.toFixed(2)),/*#__PURE__*/React.createElement(\"td\",{style:{width:\"100px\"}},\"$\",tax),/*#__PURE__*/React.createElement(\"td\",{style:{width:\"200px\"}},/*#__PURE__*/React.createElement(\"input\",{type:\"date\",min:today,onChange:function onChange(e){return setDate(e.target.value);}})),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{variant:\"success\",type:\"submit\",onClick:handleSubmit},\"Confirm Job\")),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{variant:\"warning\",type:\"submit\"},\"Estimate Job\")))));}export default JobRow;","map":{"version":3,"sources":["/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobRow.js/index.js"],"names":["React","useEffect","useState","Form","Col","Row","Button","Accordion","Card","Table","api","JobRow","products","setProducts","quantity","setQuantity","date","setDate","index","setIndex","Number","price","setPrice","code","setCode","product","setProduct","total","tax","toFixed","jobID","Math","random","customerID","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","handleSubmit","e","preventDefault","saveJob","getProducts","then","res","console","log","data","catch","error","handleChange","parseFloat","target","value","width","map","item","name","parseInt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card, Table } from 'react-bootstrap';\nimport api from '../../utils/api'\n\n\nfunction JobRow() {\n    const [ products, setProducts ] = useState([])\n    const [ quantity, setQuantity ] = useState(\"\")\n    const [ date, setDate ] = useState(\"\")\n    // const [ jobType, setJobType ] = useState({}) //product group\n    const [ index, setIndex ] = useState('')\n    const [ price, setPrice ] = useState(Number)\n    const [ code, setCode ] = useState(\"\")\n    const [ product, setProduct ] = useState({})\n\n    let total = quantity*price\n    let tax = (total*1.06625).toFixed(2)\n\n\n    let jobID = (Math.random()*1000).toFixed(0)\n    \n    let customerID = 7832\n\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth()+1;\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n        dd = \"0\"+dd\n    }\n    if (mm < 10) {\n        mm = \"0\"+mm\n    }\n    today = yyyy+\"-\"+mm+\"-\"+dd;\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        api.saveJob(jobID, customerID, date, product, quantity, tax)\n    }\n\n    useEffect(() => {\n        api.getProducts()\n        .then(res => {\n          console.log(res.data)\n          setProducts(res.data);\n        })\n        .catch(error => {\n          console.log('Error getting fake data: ' + error);\n          })\n      \n      }, []);  \n\n      function handleChange(e) {\n        setProduct(products[parseFloat(e.target.value)])\n      }\n\n      useEffect(() => {\n        setPrice(product.price)\n        setCode(product.code)\n      }, [product])\n    \n\n    return(\n        <div>\n        {/* <Accordion>\n            <Card>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    Add Job\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n                <Form>\n                    <Form.Row>\n                    <Table striped bordered hover>\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\n                        <thead>\n                        <tr>\n                        <th>Choose Service</th>\n                        <th>Quantity</th>\n                        <th>Unit Price</th>\n                        <th>Total</th>\n                        <th>Total with Tax</th>\n                        <th>Date</th>\n\n                        </tr>\n                    </thead> */}\n                    <tbody >\n   <tr >\n\n    <Form.Control as=\"select\" custom                \n    onChange={handleChange} style={{width:\"250px\"}}\n>    \n{/* <Form.Label>Choose Service</Form.Label> */}\n\n<option  key=\"default\">Choose a Product</option>\n{products.map((item, index)=>{\n              return ( \n        <option  key={index} value={index} \n        >{item.name}</option>\n\n        )})}\n\n</Form.Control>\n<td style={{width:\"100px\"}}><input style={{width:\"50px\"}} defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity}/></td>\n<td style={{width:\"100px\"}}>${price}</td>\n<td style={{width:\"100px\"}}>${total.toFixed(2)}</td>\n<td style={{width:\"100px\"}}>${tax}</td>\n<td style={{width:\"200px\"}}><input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n</td>\n<td><Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm Job</Button>\n</td>\n<td><Button variant=\"warning\" type=\"submit\" >Estimate Job</Button>\n</td>\n </tr>\n   </tbody>\n\n  {/* </Form.Group>\n</Table>\n</Form.Row>\n</Form>\n</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n\n</Accordion> */}\n</div>\n\n\n    )\n}\n\nexport default JobRow;"]},"metadata":{},"sourceType":"module"}