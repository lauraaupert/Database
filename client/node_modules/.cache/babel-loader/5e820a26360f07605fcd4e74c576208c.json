{"ast":null,"code":"var _jsxFileName = \"/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobForm.js/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card } from 'react-bootstrap'; // import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport api from '../../utils/api';\n\nfunction JobForm() {\n  const [products, setProducts] = useState([]);\n  const [quantity, setQuantity] = useState(\"\");\n  const [date, setDate] = useState(\"\"); // const [ jobType, setJobType ] = useState({}) //product group\n\n  const [index, setIndex] = useState('');\n  const [price, setPrice] = useState();\n  const [code, setCode] = useState(\"\");\n  let jobID = Math.random() * 1000;\n  console.log(jobID);\n  console.log(code);\n  var jobType = products[index];\n  jobType = products[index];\n  console.log(jobType);\n  let customerID = 7832;\n  console.log(jobType);\n  console.log(jobType); // console.log(products[index].price)\n\n  var today = new Date();\n  var dd = today.getDate();\n  var mm = today.getMonth() + 1;\n  var yyyy = today.getFullYear();\n\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n  console.log(date); // const decoratedOnClick = useAccordionToggle(eventKey, onClick);\n\n  let total = quantity * price;\n  let tax = (total * 1.06625).toFixed(2); // setPrice(total)\n  // function handleChange = (e) => {\n  //     let value = e.target.value\n  //     let name = e.target.name\n  //     let type = e.target.group\n  //    setPrice(parseInt(value),\n  // setJobName(name),\n  //  setJobType(type)\n  // }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    api.saveJob(jobID, customerID, date, jobType, quantity, tax);\n  }\n\n  useEffect(() => {\n    console.log();\n    api.getProducts().then(res => {\n      console.log(res.data);\n      setProducts(res.data);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n  console.log(price);\n  console.log(typeof quantity);\n  console.log(typeof price);\n  console.log(typeof total);\n\n  function handleChange(e) {\n    console.log(Object.keys(e.target.value));\n    setIndex(e.target.index);\n    setPrice(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"Add Job\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.SelectCustom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, \"Choose Service\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: setCode // setProduct(e.options[e.selectedIndex].value\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, \"Choose a Product\"), products.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: item.code,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, item.name, \" \");\n  })))))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, \"Click me!\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }, \"Hello! I'm another body\")))));\n}\n\nexport default JobForm;","map":{"version":3,"sources":["/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobForm.js/index.js"],"names":["React","useEffect","useState","Form","Col","Row","Button","Accordion","Card","api","JobForm","products","setProducts","quantity","setQuantity","date","setDate","index","setIndex","price","setPrice","code","setCode","jobID","Math","random","console","log","jobType","customerID","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","total","tax","toFixed","handleSubmit","e","preventDefault","saveJob","getProducts","then","res","data","catch","error","handleChange","Object","keys","target","value","map","item","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card } from 'react-bootstrap';\n// import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport api from '../../utils/api'\n\n\nfunction JobForm() {\n    const [ products, setProducts ] = useState([])\n    const [ quantity, setQuantity ] = useState(\"\")\n    const [ date, setDate ] = useState(\"\")\n    // const [ jobType, setJobType ] = useState({}) //product group\n    const [ index, setIndex ] = useState('')\n    const [ price, setPrice ] = useState()\n    const [ code, setCode ] = useState(\"\")\n\n    let jobID = Math.random()*1000\n    console.log(jobID)\n    console.log(code)\n    var jobType = products[index]\n       \n    \n    jobType = products[index]\n    \n    console.log(jobType)\n\n    let customerID = 7832\n    console.log(jobType)\n\n    console.log(jobType)\n    // console.log(products[index].price)\n\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth()+1;\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n        dd = \"0\"+dd\n    }\n    if (mm < 10) {\n        mm = \"0\"+mm\n    }\n    today = yyyy+\"-\"+mm+\"-\"+dd;\n\n\n    console.log(date)\n    // const decoratedOnClick = useAccordionToggle(eventKey, onClick);\n\n\n    let total = quantity*price\n    let tax = (total*1.06625).toFixed(2)\n\n    // setPrice(total)\n\n    // function handleChange = (e) => {\n    //     let value = e.target.value\n    //     let name = e.target.name\n    //     let type = e.target.group\n    //    setPrice(parseInt(value),\n    // setJobName(name),\n    //  setJobType(type)\n    // }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        api.saveJob(jobID, customerID, date, jobType, quantity, tax)\n    }\n\n    useEffect(() => {\n        console.log()\n        api.getProducts()\n        .then(res => {\n          console.log(res.data)\n          setProducts(res.data);\n        })\n        .catch(error => {\n          console.log('Error getting fake data: ' + error);\n          })\n      \n      }, []);  \n\n      console.log(price) \n      console.log(typeof(quantity))\n      console.log(typeof(price))\n      console.log(typeof(total))\n\n      function handleChange(e) {\n          console.log(Object.keys(e.target.value))\n        setIndex(e.target.index)\n        setPrice(e.target.value)\n      }\n\n  \n    return (\n        <div>\n\n\n    <Accordion>\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n        Add Job\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"0\">\n      <Card.Body>\n      <Form>\n      <Form.Row>\n      {/* <Col> */}\n\n  <Form.Group controlId=\"exampleForm.SelectCustom\">\n\n    <Form.Label>Choose Service</Form.Label>\n\n    <Form.Control as=\"select\" custom                \n    onChange={setCode}\n                    // setProduct(e.options[e.selectedIndex].value\n                    \n>\n        <option key=\"default\">Choose a Product</option>\n        {products.map((item, index)=>{\n                      return (\n\n                <option key={index} value={item.code} \n                >{item.name} </option>\n        )})}\n\n    </Form.Control>\n  </Form.Group>\n\n  {/* </Col> */}\n  {/* <Col sm={2}>\n\n<Form.Group controlId=\"exampleForm.SelectCustom\">\n  <Form.Label>Quantity</Form.Label>\n  <Form.Control placeholder=\"0\" defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity}/>  \n</Form.Group>\n</Col>\n<Col>\n<p>Unit Price</p>\n<p>${price}</p>\n</Col>\n<Col>\n<p>Total</p>\n<p>${total.toFixed(2)}</p> \n</Col>\n<Col>\n<p>With Tax</p>\n<p>${tax}</p>\n</Col>\n<Col>\n<p>Date</p>\n<input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n</Col>\n<Col>\n<Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm</Button>\n</Col> */}\n\n\n\n\n  </Form.Row>\n</Form>\n          </Card.Body>\n    </Accordion.Collapse>\n  </Card>\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n        Click me!\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"1\">\n      <Card.Body>Hello! I'm another body</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n</Accordion>\n</div>\n\n    )\n}\n\nexport default JobForm;"]},"metadata":{},"sourceType":"module"}