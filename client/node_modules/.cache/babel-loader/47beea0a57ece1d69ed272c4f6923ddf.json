{"ast":null,"code":"var _jsxFileName = \"/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobForm.js/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card, Table } from 'react-bootstrap'; // import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport api from '../../utils/api';\n\nfunction JobForm() {\n  const [products, setProducts] = useState([]);\n  const [quantity, setQuantity] = useState(\"\");\n  const [date, setDate] = useState(\"\"); // const [ jobType, setJobType ] = useState({}) //product group\n\n  const [index, setIndex] = useState('');\n  const [price, setPrice] = useState(Number);\n  const [code, setCode] = useState(\"\");\n  const [product, setProduct] = useState({});\n  let total = quantity * price;\n  let tax = (total * 1.06625).toFixed(2);\n  let jobID = (Math.random() * 1000).toFixed(0);\n  let customerID = 7832;\n  var today = new Date();\n  var dd = today.getDate();\n  var mm = today.getMonth() + 1;\n  var yyyy = today.getFullYear();\n\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  today = yyyy + \"-\" + mm + \"-\" + dd;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    api.saveJob(jobID, customerID, date, product, quantity, tax);\n  }\n\n  useEffect(() => {\n    api.getProducts().then(res => {\n      console.log(res.data);\n      setProducts(res.data);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n\n  function handleChange(e) {\n    setProduct(products[parseFloat(e.target.value)]);\n  }\n\n  useEffect(() => {\n    setPrice(product.price);\n    setCode(product.code);\n  }, [product]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Add Job\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.SelectCustom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  }, \"Choose Service\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, \"Total with Tax\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, \"Date\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: handleChange // value={index}\n    // setProduct(e.options[e.selectedIndex].value   (e) => {setIndex(e.target.value)}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, \"    \", /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"Choose Service\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Choose a Product\"), products.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, item.name);\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    defaultValue: 1,\n    onChange: e => setQuantity(parseInt(e.target.value)),\n    value: quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, \"$\", price), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, \"$\", total.toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, \"$\", tax), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    min: today,\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Confirm Job\")), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"warning\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, \"Estimate Job\"))), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, \"Click me!\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Hello! I'm another body\"))))))))))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, \"Click me!\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, \"Hello! I'm another body\")))));\n}\n\nexport default JobForm;","map":{"version":3,"sources":["/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobForm.js/index.js"],"names":["React","useEffect","useState","Form","Col","Row","Button","Accordion","Card","Table","api","JobForm","products","setProducts","quantity","setQuantity","date","setDate","index","setIndex","price","setPrice","Number","code","setCode","product","setProduct","total","tax","toFixed","jobID","Math","random","customerID","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","handleSubmit","e","preventDefault","saveJob","getProducts","then","res","console","log","data","catch","error","handleChange","parseFloat","target","value","map","item","name","parseInt"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card, Table } from 'react-bootstrap';\n// import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport api from '../../utils/api'\n\n\nfunction JobForm() {\n    const [ products, setProducts ] = useState([])\n    const [ quantity, setQuantity ] = useState(\"\")\n    const [ date, setDate ] = useState(\"\")\n    // const [ jobType, setJobType ] = useState({}) //product group\n    const [ index, setIndex ] = useState('')\n    const [ price, setPrice ] = useState(Number)\n    const [ code, setCode ] = useState(\"\")\n    const [ product, setProduct ] = useState({})\n\n    let total = quantity*price\n    let tax = (total*1.06625).toFixed(2)\n\n\n    let jobID = (Math.random()*1000).toFixed(0)\n    \n    let customerID = 7832\n\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth()+1;\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n        dd = \"0\"+dd\n    }\n    if (mm < 10) {\n        mm = \"0\"+mm\n    }\n    today = yyyy+\"-\"+mm+\"-\"+dd;\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        api.saveJob(jobID, customerID, date, product, quantity, tax)\n    }\n\n    useEffect(() => {\n        api.getProducts()\n        .then(res => {\n          console.log(res.data)\n          setProducts(res.data);\n        })\n        .catch(error => {\n          console.log('Error getting fake data: ' + error);\n          })\n      \n      }, []);  \n\n      function handleChange(e) {\n        setProduct(products[parseFloat(e.target.value)])\n      }\n\n      useEffect(() => {\n        setPrice(product.price)\n        setCode(product.code)\n      }, [product])\n    \n  \n    return (\n        <div>\n            <Accordion>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                        Add Job\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey=\"0\">\n                <Card.Body>\n                    <Form>\n                        <Form.Row>\n                        <Table striped bordered hover>\n                            <Form.Group controlId=\"exampleForm.SelectCustom\">\n                            <thead>\n                            <tr>\n                            <th>Choose Service</th>\n                            <th>Quantity</th>\n                            <th>Unit Price</th>\n                            <th>Total</th>\n                            <th>Total with Tax</th>\n                            <th>Date</th>\n\n                            </tr>\n                        </thead>\n<tbody>\n   <tr>\n\n    <Form.Control as=\"select\" custom                \n    onChange={handleChange} \n    // value={index}\n                    // setProduct(e.options[e.selectedIndex].value   (e) => {setIndex(e.target.value)}\n                    \n>    <Form.Label>Choose Service</Form.Label>\n\n        <option key=\"default\">Choose a Product</option>\n        {products.map((item, index)=>{\n                      return ( \n                <option key={index} value={index} \n                >{item.name}</option>\n\n                )})}\n\n    </Form.Control>\n    <td><input defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity}/></td>\n    <td>${price}</td>\n    <td>${total.toFixed(2)}</td>\n    <td>${tax}</td>\n    <td><input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n</td>\n    <td><Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm Job</Button>\n</td>\n<td><Button variant=\"warning\" type=\"submit\" >Estimate Job</Button>\n</td>\n\n    </tr>\n    <tr>\n        <td>\n        <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n        Click me!\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"1\">\n      <Card.Body>Hello! I'm another body</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n  </td>\n  </tr>\n  </tbody>\n\n\n\n  </Form.Group>\n</Table>\n  {/* </Col> */}\n  {/* <Col sm={2}>\n\n<Form.Group controlId=\"exampleForm.SelectCustom\">\n  <Form.Label>Quantity</Form.Label>\n  <Form.Control defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity} />\n</Form.Group>\n</Col>\n<Col>\n<p>Unit Price</p>\n<p>${price}</p>\n</Col>\n<Col>\n<p>Total</p>\n\n     <p>${total.toFixed(2)}</p> \n     {/* <p></p>} */}\n{/* </Col>\n<Col>\n<p>With Tax</p>\n<p>${tax}</p>\n</Col>\n<Col>\n<p>Date</p>\n<input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n</Col> */}\n{/* <Col>\n<Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm</Button>\n</Col>  */}\n\n\n\n\n  </Form.Row>\n</Form>\n          </Card.Body>\n    </Accordion.Collapse>\n  </Card>\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n        Click me!\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"1\">\n      <Card.Body>Hello! I'm another body</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n</Accordion>\n</div>\n\n    )\n}\n\nexport default JobForm;"]},"metadata":{},"sourceType":"module"}