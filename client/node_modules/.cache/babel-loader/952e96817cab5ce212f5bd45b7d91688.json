{"ast":null,"code":"import _slicedToArray from\"/Users/lauraaupert/Desktop/Dan/OxyMagic/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState}from'react';import{Col,Row,Button,Form,Card}from'react-bootstrap';import api from'../../utils/api';import{CurrCustContext}from'../../utils/currentCustomerContext';import axios from'axios';function UpdateForm(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),lastName=_useState2[0],setLastName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),county=_useState4[0],setCounty=_useState4[1];var context=useContext(CurrCustContext);var customer=context.currCust[0];var id=customer._id;console.log(id,lastName,county);function handleSubmit(e){e.preventDefault();// axios.put(\"/api/customers\", county)\n// .then(response => console.log(response.data));\napi.updateCustomer(id,lastName,county);console.log(lastName,county);}return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridID\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Customer ID\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",defaultValue:customer.customerID,placeholder:\"Enter ID\"})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridFirst\"},/*#__PURE__*/React.createElement(Form.Label,null,\"First Name\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",defaultValue:customer.firstName})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridLast\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Last Name\"),/*#__PURE__*/React.createElement(Form.Control,{onChange:function onChange(e){return setLastName(e.target.value);},type:\"text\",defaultValue:customer.lastName}))),/*#__PURE__*/React.createElement(Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridEmail\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Email\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"email\",defaultValue:customer.email})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridCounty\"},/*#__PURE__*/React.createElement(Form.Label,null,\"County\"),/*#__PURE__*/React.createElement(Form.Control,{onChange:function onChange(e){return setCounty(e.target.value);},type:\"text\",defaultValue:customer.county}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridPhone\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Cell Phone\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",defaultValue:customer.cellPhone})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridPhone\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Home Phone\"),/*#__PURE__*/React.createElement(Form.Control,{type:\"text\",defaultValue:customer.homePhone}))),/*#__PURE__*/React.createElement(Form.Group,{className:\"mb-3\",controlId:\"formGridAddress1\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Address\"),/*#__PURE__*/React.createElement(Form.Control,{defaultValue:customer.address.line1})),/*#__PURE__*/React.createElement(Form.Group,{className:\"mb-3\",controlId:\"formGridAddress2\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Address 2\"),/*#__PURE__*/React.createElement(Form.Control,{defaultValue:customer.address.line2})),/*#__PURE__*/React.createElement(Row,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridCity\"},/*#__PURE__*/React.createElement(Form.Label,null,\"City\"),/*#__PURE__*/React.createElement(Form.Control,{defaultValue:customer.address.city})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridState\"},/*#__PURE__*/React.createElement(Form.Label,null,\"State\"),/*#__PURE__*/React.createElement(Form.Control,{defaultValue:customer.address.state})),/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:\"formGridZip\"},/*#__PURE__*/React.createElement(Form.Label,null,\"Zip\"),/*#__PURE__*/React.createElement(Form.Control,{defaultValue:customer.address.zip})))),/*#__PURE__*/React.createElement(Button,{onClick:handleSubmit,type:\"submit\",variant:\"info\"},\"Update Info\")));}export default UpdateForm;","map":{"version":3,"sources":["/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/UpdateForm/index.js"],"names":["React","useContext","useState","Col","Row","Button","Form","Card","api","CurrCustContext","axios","UpdateForm","lastName","setLastName","county","setCounty","context","customer","currCust","id","_id","console","log","handleSubmit","e","preventDefault","updateCustomer","customerID","firstName","target","value","email","cellPhone","homePhone","address","line1","line2","city","state","zip"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Col, Row, Button, Form, Card } from 'react-bootstrap'\nimport api from '../../utils/api';\nimport { CurrCustContext } from '../../utils/currentCustomerContext';\nimport axios from 'axios'\n\nfunction UpdateForm() {\n    const [ lastName, setLastName ] = useState(\"\")\n    const [ county, setCounty ] = useState(\"\")\n\n    const context = useContext(CurrCustContext)\n    const customer = context.currCust[0]\n    const id = customer._id\n\n    console.log(id, lastName, county)\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        \n        // axios.put(\"/api/customers\", county)\n        // .then(response => console.log(response.data));\n        api.updateCustomer(id, lastName, county)\n        console.log(lastName, county)\n    }\n    return ( \n        <Card>\n            <Card.Body >\n<Form>\n<Row className=\"mb-3\">\n\n<Form.Group as={Col} controlId=\"formGridID\">\n  <Form.Label>Customer ID</Form.Label>\n  <Form.Control type=\"text\" defaultValue={customer.customerID} placeholder=\"Enter ID\" />\n</Form.Group>\n\n <Form.Group as={Col} controlId=\"formGridFirst\">\n  <Form.Label>First Name</Form.Label>\n  <Form.Control type=\"text\" defaultValue={customer.firstName} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridLast\">\n  <Form.Label>Last Name</Form.Label>\n  <Form.Control onChange={(e) => setLastName(e.target.value)} type=\"text\" defaultValue={customer.lastName}></Form.Control> \n</Form.Group>\n\n</Row>\n\n  <Row className=\"mb-3\">\n\n    <Form.Group as={Col} controlId=\"formGridEmail\">\n      <Form.Label>Email</Form.Label>\n      <Form.Control type=\"email\" defaultValue={customer.email} />\n    </Form.Group>\n\n     <Form.Group as={Col} controlId=\"formGridCounty\">\n      <Form.Label>County</Form.Label>\n      <Form.Control onChange={(e) => setCounty(e.target.value)} type=\"text\" defaultValue={customer.county} />\n    </Form.Group>\n  </Row>\n\n  <Row>\n\n  <Form.Group as={Col} controlId=\"formGridPhone\">\n      <Form.Label>Cell Phone</Form.Label>\n      <Form.Control type=\"text\" defaultValue={customer.cellPhone} />\n    </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridPhone\">\n      <Form.Label>Home Phone</Form.Label>\n      <Form.Control type=\"text\" defaultValue={customer.homePhone} />\n    </Form.Group>\n  </Row>\n\n\n  <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n    <Form.Label>Address</Form.Label>\n    <Form.Control defaultValue={customer.address.line1} />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n    <Form.Label>Address 2</Form.Label>\n    <Form.Control defaultValue={customer.address.line2} />\n  </Form.Group>\n\n  <Row className=\"mb-3\">\n    <Form.Group as={Col} controlId=\"formGridCity\">\n      <Form.Label>City</Form.Label>\n      <Form.Control defaultValue={customer.address.city} />\n    </Form.Group>\n    \n\n     <Form.Group as={Col} controlId=\"formGridState\">\n     <Form.Label>State</Form.Label>\n      <Form.Control defaultValue={customer.address.state} />\n      </Form.Group>\n\n     <Form.Group as={Col} controlId=\"formGridZip\">\n       <Form.Label>Zip</Form.Label>\n       <Form.Control defaultValue={customer.address.zip} />\n     </Form.Group>\n   </Row>\n    </Form>\n\n<Button onClick={handleSubmit} type=\"submit\" variant=\"info\">Update Info</Button>\n\n</Card.Body>\n        </Card>\n\n)\n}\n\nexport default UpdateForm;"]},"metadata":{},"sourceType":"module"}