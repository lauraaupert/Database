{"ast":null,"code":"var _jsxFileName = \"/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobForm.js/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card } from 'react-bootstrap'; // import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport api from '../../utils/api';\n\nfunction JobForm() {\n  const [products, setProducts] = useState([]);\n  const [price, setPrice] = useState();\n  const [quantity, setQuantity] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [jobType, setJobType] = useState(\"\"); //product group\n\n  const [jobName, setJobName] = useState(\"\"); //product name\n\n  const [jobCode, setJobCode] = useState(\"\");\n  let jobID = Math.random() * 1000;\n  console.log(jobID);\n  console.log(products);\n  let customerID = 12;\n  console.log(jobType);\n  console.log(date); // const decoratedOnClick = useAccordionToggle(eventKey, onClick);\n\n  console.log(jobName);\n  let total = quantity * price;\n  let tax = (total * 1.06625).toFixed(2);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    api.saveJob(jobID, customerID, date, jobType, jobName, jobCode, quantity, price, total);\n  }\n\n  useEffect(() => {\n    console.log();\n    api.getProducts().then(res => {\n      console.log(res.data);\n      setProducts(res.data);\n    }).catch(error => {\n      console.log('Error getting fake data: ' + error);\n    });\n  }, []);\n  console.log(price);\n  console.log(typeof quantity);\n  console.log(typeof price);\n  console.log(typeof total);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Accordion, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Add Job\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.SelectCustom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }, \"Choose Service\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    custom: true,\n    onChange: e => setPrice(parseInt(e.target.value.price), setJobName(e.target.value), setJobType(e.target.dataset.jobType)) // setProduct(e.options[e.selectedIndex].value\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \"Choose a Product\"), products.map(item => {\n    // console.log(item)\n    // setJobCode(item.code)\n    // console.log(jobCode)\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: item._id,\n      \"data-job-type\": item.group,\n      value: item.name,\n      name: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, item.name, \" \");\n  })))), /*#__PURE__*/React.createElement(Col, {\n    sm: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.SelectCustom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }\n  }, \"Quantity\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"0\",\n    type: \"text\",\n    onChange: e => setQuantity(parseInt(e.target.value)),\n    value: quantity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }\n  }, \"Unit Price\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 1\n    }\n  }, \"$\", price)), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 1\n    }\n  }, \"$\", total.toFixed(2))), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 1\n    }\n  }, \"With Tax\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 1\n    }\n  }, \"$\", tax)), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    onChange: e => setDate(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 1\n    }\n  }))))))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n    as: Button,\n    variant: \"link\",\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, \"Click me!\")), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n    eventKey: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, \"Hello! I'm another body\")))));\n}\n\nexport default JobForm;","map":{"version":3,"sources":["/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobForm.js/index.js"],"names":["React","useEffect","useState","Form","Col","Row","Button","Accordion","Card","api","JobForm","products","setProducts","price","setPrice","quantity","setQuantity","date","setDate","jobType","setJobType","jobName","setJobName","jobCode","setJobCode","jobID","Math","random","console","log","customerID","total","tax","toFixed","handleSubmit","e","preventDefault","saveJob","getProducts","then","res","data","catch","error","parseInt","target","value","dataset","map","item","_id","group","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card } from 'react-bootstrap';\n// import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport api from '../../utils/api'\n\n\nfunction JobForm() {\n    const [ products, setProducts ] = useState([])\n    const [ price, setPrice ] = useState()\n    const [ quantity, setQuantity ] = useState(\"\")\n    const [ date, setDate ] = useState(\"\")\n    const [ jobType, setJobType ] = useState(\"\") //product group\n    const [ jobName, setJobName ] = useState(\"\") //product name\n    const [ jobCode, setJobCode ] = useState(\"\")\n\n    let jobID = Math.random()*1000\n    console.log(jobID)\n\n    console.log(products)\n\n    let customerID = 12\n    console.log(jobType)\n\n\n    console.log(date)\n    // const decoratedOnClick = useAccordionToggle(eventKey, onClick);\n\n    console.log(jobName)\n\n    let total = quantity*price\n    let tax = (total*1.06625).toFixed(2)\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        api.saveJob(jobID, customerID, date, jobType, jobName, jobCode, quantity, price, total)\n    }\n\n    useEffect(() => {\n        console.log()\n        api.getProducts()\n        .then(res => {\n          console.log(res.data)\n          setProducts(res.data);\n        })\n        .catch(error => {\n          console.log('Error getting fake data: ' + error);\n          })\n      \n      }, []);  \n\n      console.log(price) \n      console.log(typeof(quantity))\n      console.log(typeof(price))\n      console.log(typeof(total))\n\n  \n    return (\n        <div>\n\n\n    <Accordion>\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n        Add Job\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"0\">\n      <Card.Body>\n      <Form>\n      <Form.Row>\n      <Col>\n\n  <Form.Group controlId=\"exampleForm.SelectCustom\">\n    <Form.Label>Choose Service</Form.Label>\n\n    <Form.Control as=\"select\" custom                \n    onChange={(e) => setPrice(parseInt(e.target.value.price), setJobName(e.target.value), setJobType(e.target.dataset.jobType))\n                    // setProduct(e.options[e.selectedIndex].value\n                    }\n>\n        <option key=\"default\">Choose a Product</option>\n        {products.map((item)=>{\n            // console.log(item)\n            // setJobCode(item.code)\n            // console.log(jobCode)\n            return (\n                <option key={item._id} data-job-type={item.group} value={item.name} name={item.name}\n                >{item.name} </option>\n\n        )})}\n    </Form.Control>\n  </Form.Group>\n  </Col>\n  <Col sm={2}>\n\n<Form.Group controlId=\"exampleForm.SelectCustom\">\n  <Form.Label>Quantity</Form.Label>\n  <Form.Control placeholder=\"0\" type=\"text\" onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity}/>  \n</Form.Group>\n</Col>\n<Col>\n<p>Unit Price</p>\n<p>${price}</p>\n</Col>\n<Col>\n<p>Total</p>\n<p>${total.toFixed(2)}</p> \n</Col>\n<Col>\n<p>With Tax</p>\n<p>${tax}</p>\n</Col>\n<Col>\n<p>Date</p>\n<input type=\"date\" onChange={(e) => setDate(e.target.value)}></input>\n</Col>\n<Col>\n<button type=\"submit\" onClick={handleSubmit}></button>\n</Col>\n\n\n\n\n  </Form.Row>\n</Form>\n          </Card.Body>\n    </Accordion.Collapse>\n  </Card>\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n        Click me!\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"1\">\n      <Card.Body>Hello! I'm another body</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n</Accordion>\n</div>\n\n    )\n}\n\nexport default JobForm;"]},"metadata":{},"sourceType":"module"}