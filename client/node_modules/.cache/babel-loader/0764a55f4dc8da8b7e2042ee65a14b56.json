{"ast":null,"code":"var _jsxFileName = \"/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobForm.js/index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card, Table } from 'react-bootstrap'; // import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\n\nimport api from '../../utils/api';\nimport JobRow from '../JobRow.js';\n\nfunction JobForm() {\n  // const [ products, setProducts ] = useState([])\n  // const [ quantity, setQuantity ] = useState(\"\")\n  // const [ date, setDate ] = useState(\"\")\n  // // const [ jobType, setJobType ] = useState({}) //product group\n  // const [ index, setIndex ] = useState('')\n  // const [ price, setPrice ] = useState(Number)\n  // const [ code, setCode ] = useState(\"\")\n  // const [ product, setProduct ] = useState({})\n  // let total = quantity*price\n  // let tax = (total*1.06625).toFixed(2)\n  // let jobID = (Math.random()*1000).toFixed(0)\n  // let customerID = 7832\n  // var today = new Date();\n  // var dd = today.getDate();\n  // var mm = today.getMonth()+1;\n  // var yyyy = today.getFullYear();\n  // if (dd < 10) {\n  //     dd = \"0\"+dd\n  // }\n  // if (mm < 10) {\n  //     mm = \"0\"+mm\n  // }\n  // today = yyyy+\"-\"+mm+\"-\"+dd;\n  // function handleSubmit(e) {\n  //     e.preventDefault()\n  //     api.saveJob(jobID, customerID, date, product, quantity, tax)\n  // }\n  // useEffect(() => {\n  //     api.getProducts()\n  //     .then(res => {\n  //       console.log(res.data)\n  //       setProducts(res.data);\n  //     })\n  //     .catch(error => {\n  //       console.log('Error getting fake data: ' + error);\n  //       })\n  //   }, []);  \n  //   function handleChange(e) {\n  //     setProduct(products[parseFloat(e.target.value)])\n  //   }\n  //   useEffect(() => {\n  //     setPrice(product.price)\n  //     setCode(product.code)\n  //   }, [product])\n  return /*#__PURE__*/React.createElement(JobRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }) //         // <div>\n  //             {/* <Accordion>\n  //                 <Card>\n  //                     <Card.Header>\n  //                         <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n  //                         Add Job\n  //                         </Accordion.Toggle>\n  //                     </Card.Header>\n  //                     <Accordion.Collapse eventKey=\"0\">\n  //                 <Card.Body>\n  //                     <Form>\n  //                         <Form.Row>\n  //                         <Table striped bordered hover>\n  //                             <Form.Group controlId=\"exampleForm.SelectCustom\">\n  //                             <thead>\n  //                             <tr>\n  //                             <th>Choose Service</th>\n  //                             <th>Quantity</th>\n  //                             <th>Unit Price</th>\n  //                             <th>Total</th>\n  //                             <th>Total with Tax</th>\n  //                             <th>Date</th>\n  //                             </tr>\n  //                         </thead> */}\n  // {/* <tbody style={{width: \"100%\"}}>\n  //    <tr style={{width: \"100%\"}}>\n  //     <Form.Control as=\"select\" custom                \n  //     onChange={handleChange} \n  //                      */}\n  // {/* >    <Form.Label>Choose Service</Form.Label>\n  //         <option key=\"default\">Choose a Product</option>\n  //         {products.map((item, index)=>{\n  //                       return ( \n  //                 <option key={index} value={index} \n  //                 >{item.name}</option>\n  //                 )})}\n  //     </Form.Control>\n  //     <td><input defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity}/></td>\n  //     <td>${price}</td>\n  //     <td>${total.toFixed(2)}</td>\n  //     <td>${tax}</td>\n  //     <td><input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n  // </td>\n  //     <td><Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm Job</Button>\n  // </td>\n  // <td><Button variant=\"warning\" type=\"submit\" >Estimate Job</Button>\n  // </td> */}\n  //     {/* </tr>\n  //     <tr size=\"lg\">\n  //         <Button block variant=\"link\" type=\"submit\" >Add Product</Button>\n  //     </tr>\n  //     </tbody>\n  //   </Form.Group>\n  // </Table> */}\n  //   {/* </Col> */}\n  //   {/* <Col sm={2}>\n  // <Form.Group controlId=\"exampleForm.SelectCustom\">\n  //   <Form.Label>Quantity</Form.Label>\n  //   <Form.Control defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity} />\n  // </Form.Group>\n  // </Col>\n  // <Col>\n  // <p>Unit Price</p>\n  // <p>${price}</p>\n  // </Col>\n  // <Col>\n  // <p>Total</p>\n  //      <p>${total.toFixed(2)}</p> \n  //      {/* <p></p>} */}\n  // {/* </Col>\n  // <Col>\n  // <p>With Tax</p>\n  // <p>${tax}</p>\n  // </Col>\n  // <Col>\n  // <p>Date</p>\n  // <input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n  // </Col> */}\n  // {/* <Col>\n  // <Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm</Button>\n  // </Col>  */}\n  //   {/* </Form.Row>\n  // </Form>\n  //           </Card.Body>\n  //     </Accordion.Collapse>\n  //   </Card>\n  //   <Card>\n  //     <Card.Header>\n  //       <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n  //         Click me!\n  //       </Accordion.Toggle>\n  //     </Card.Header>\n  //     <Accordion.Collapse eventKey=\"1\">\n  //       <Card.Body>Hello! I'm another body</Card.Body>\n  //     </Accordion.Collapse>\n  //   </Card>\n  // </Accordion>\n  // </div> */}\n  ;\n}\n\nexport default JobForm;","map":{"version":3,"sources":["/Users/lauraaupert/Desktop/Dan/OxyMagic/client/src/components/JobForm.js/index.js"],"names":["React","useEffect","useState","Form","Col","Row","Button","Accordion","Card","Table","api","JobRow","JobForm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,SAAjC,EAA4CC,IAA5C,EAAkDC,KAAlD,QAA+D,iBAA/D,C,CACA;;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAGA,SAASC,OAAT,GAAmB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA,sBACI,ohHI;AAmHH;;AAED,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card, Table } from 'react-bootstrap';\n// import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport api from '../../utils/api'\nimport JobRow from '../JobRow.js'\n\n\nfunction JobForm() {\n    // const [ products, setProducts ] = useState([])\n    // const [ quantity, setQuantity ] = useState(\"\")\n    // const [ date, setDate ] = useState(\"\")\n    // // const [ jobType, setJobType ] = useState({}) //product group\n    // const [ index, setIndex ] = useState('')\n    // const [ price, setPrice ] = useState(Number)\n    // const [ code, setCode ] = useState(\"\")\n    // const [ product, setProduct ] = useState({})\n\n    // let total = quantity*price\n    // let tax = (total*1.06625).toFixed(2)\n\n\n    // let jobID = (Math.random()*1000).toFixed(0)\n    \n    // let customerID = 7832\n\n    // var today = new Date();\n    // var dd = today.getDate();\n    // var mm = today.getMonth()+1;\n    // var yyyy = today.getFullYear();\n    // if (dd < 10) {\n    //     dd = \"0\"+dd\n    // }\n    // if (mm < 10) {\n    //     mm = \"0\"+mm\n    // }\n    // today = yyyy+\"-\"+mm+\"-\"+dd;\n\n    // function handleSubmit(e) {\n    //     e.preventDefault()\n    //     api.saveJob(jobID, customerID, date, product, quantity, tax)\n    // }\n\n    // useEffect(() => {\n    //     api.getProducts()\n    //     .then(res => {\n    //       console.log(res.data)\n    //       setProducts(res.data);\n    //     })\n    //     .catch(error => {\n    //       console.log('Error getting fake data: ' + error);\n    //       })\n      \n    //   }, []);  \n\n    //   function handleChange(e) {\n    //     setProduct(products[parseFloat(e.target.value)])\n    //   }\n\n    //   useEffect(() => {\n    //     setPrice(product.price)\n    //     setCode(product.code)\n    //   }, [product])\n    \n  \n    return (\n        <JobRow />\n//         // <div>\n//             {/* <Accordion>\n//                 <Card>\n//                     <Card.Header>\n//                         <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n//                         Add Job\n//                         </Accordion.Toggle>\n//                     </Card.Header>\n//                     <Accordion.Collapse eventKey=\"0\">\n//                 <Card.Body>\n//                     <Form>\n//                         <Form.Row>\n//                         <Table striped bordered hover>\n//                             <Form.Group controlId=\"exampleForm.SelectCustom\">\n//                             <thead>\n//                             <tr>\n//                             <th>Choose Service</th>\n//                             <th>Quantity</th>\n//                             <th>Unit Price</th>\n//                             <th>Total</th>\n//                             <th>Total with Tax</th>\n//                             <th>Date</th>\n\n//                             </tr>\n//                         </thead> */}\n// {/* <tbody style={{width: \"100%\"}}>\n//    <tr style={{width: \"100%\"}}>\n\n//     <Form.Control as=\"select\" custom                \n//     onChange={handleChange} \n//                      */}\n// {/* >    <Form.Label>Choose Service</Form.Label>\n\n//         <option key=\"default\">Choose a Product</option>\n//         {products.map((item, index)=>{\n//                       return ( \n//                 <option key={index} value={index} \n//                 >{item.name}</option>\n\n//                 )})}\n\n//     </Form.Control>\n//     <td><input defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity}/></td>\n//     <td>${price}</td>\n//     <td>${total.toFixed(2)}</td>\n//     <td>${tax}</td>\n//     <td><input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n// </td>\n//     <td><Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm Job</Button>\n// </td>\n// <td><Button variant=\"warning\" type=\"submit\" >Estimate Job</Button>\n// </td> */}\n\n//     {/* </tr>\n//     <tr size=\"lg\">\n//         <Button block variant=\"link\" type=\"submit\" >Add Product</Button>\n//     </tr>\n//     </tbody>\n\n//   </Form.Group>\n// </Table> */}\n//   {/* </Col> */}\n//   {/* <Col sm={2}>\n\n// <Form.Group controlId=\"exampleForm.SelectCustom\">\n//   <Form.Label>Quantity</Form.Label>\n//   <Form.Control defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity} />\n// </Form.Group>\n// </Col>\n// <Col>\n// <p>Unit Price</p>\n// <p>${price}</p>\n// </Col>\n// <Col>\n// <p>Total</p>\n\n//      <p>${total.toFixed(2)}</p> \n//      {/* <p></p>} */}\n// {/* </Col>\n// <Col>\n// <p>With Tax</p>\n// <p>${tax}</p>\n// </Col>\n// <Col>\n// <p>Date</p>\n// <input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n// </Col> */}\n// {/* <Col>\n// <Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm</Button>\n// </Col>  */}\n\n\n\n\n//   {/* </Form.Row>\n// </Form>\n//           </Card.Body>\n//     </Accordion.Collapse>\n//   </Card>\n//   <Card>\n//     <Card.Header>\n//       <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n//         Click me!\n//       </Accordion.Toggle>\n//     </Card.Header>\n//     <Accordion.Collapse eventKey=\"1\">\n//       <Card.Body>Hello! I'm another body</Card.Body>\n//     </Accordion.Collapse>\n//   </Card>\n// </Accordion>\n// </div> */}\n\n    )\n}\n\nexport default JobForm;"]},"metadata":{},"sourceType":"module"}