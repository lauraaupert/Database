{"version":3,"sources":["components/Menu.js/index.js","pages/Home.js","utils/api.js","components/ClientForm.js/index.js","components/JobRow.js/index.js","components/JobForm.js/index.js","pages/NewClient.js","components/AdminMenu.js/index.js","pages/Admin.js","components/AddProductForm.js/index.js","components/ProductTable/index.js","pages/AddProduct.js","utils/currentCustomerContext.js","components/UpdateForm/index.js","components/UpdateModal/index.js","components/CustomerTable/index.js","pages/Customers.js","components/Nav/index.js","App.js","registerServiceWorker.js","index.js","logo.svg"],"names":["Menu","Container","Row","Col","Button","variant","size","block","style","backgroundColor","height","href","Home","customerID","firstName","lastName","cellPhone","homePhone","email","referral","county","confirmed","line1","line2","city","state","zip","console","log","axios","post","address","group","name","code","price","jobID","date","jobType","quantity","total","serviceList","type","get","id","put","_id","$push","delete","ClientForm","useState","setFirstName","setLastName","setCellPhone","setHomePhone","setEmail","setLine1","setLine2","setCity","setState","setZip","setCounty","setReferral","setConfirmed","Form","Group","Label","column","md","Control","placeholder","onChange","e","target","value","controlId","as","Check","label","onClick","preventDefault","api","JobRow","products","setProducts","setQuantity","setDate","Number","setPrice","setCode","product","setProduct","tax","toFixed","Math","random","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","useEffect","then","res","data","catch","error","custom","parseFloat","width","key","map","item","index","defaultValue","parseInt","min","JobForm","Accordion","Card","Header","Toggle","eventKey","Collapse","Body","Table","striped","bordered","hover","NewClient","AdminMenu","Admin","AddProductForm","setGroup","setName","lg","ProductTable","allData","setAllData","upholstery","carpet","i","length","push","onDelete","marginLeft","AddProduct","CurrCustContext","createContext","CurrCustProvider","children","currCust","setCurrCust","currJob","Provider","UpdateForm","customer","useContext","className","UpdateModal","show","setShow","handleClose","Modal","onHide","backdrop","keyboard","centered","closeButton","Title","Footer","CustomerTable","filteredData","setFilteredData","context","event","result","filter","search","toString","handleSearch","jobs","Customers","Navigation","Nav","fill","Item","Link","disabled","App","margin","exact","path","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.1345465e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nfunction Menu() {\n\n    return(\n        <Container>\n            <Row>\n<Col>\n  <Button variant=\"primary\" size=\"lg\" block style={{backgroundColor: \"lightgray\", height: \"400px\"}} href=\"/newcustomer\">\n    New Customer\n  </Button>\n  <Button variant=\"secondary\" size=\"lg\" block href=\"/customers\">\n    All Customers\n  </Button>\n</Col>\n<Col>\n  <Button variant=\"primary\" size=\"lg\" block href=\"/newjob\">\n    New Order\n  </Button>\n  <Button variant=\"secondary\" size=\"lg\" block>\n    All Orders\n  </Button>\n</Col>\n</Row>\n</Container>\n    )\n}\n\nexport default Menu;","import React, { Component } from \"react\";\nimport Menu from \"../components/Menu.js/index\";\n\n\nfunction Home() {\n\n    return(\n        <Menu />\n    )\n}\n\nexport default Home;","import axios from 'axios';\n\nexport default {\n\nsaveCustomer: function (customerID, firstName, lastName, \n    cellPhone, homePhone, email, referral, county, confirmed,\n     line1, line2, city, state, zip) {\n    console.log(firstName, email, city, cellPhone)\n    return axios.post('/api/customers', {\n        customerID: customerID, \n        firstName: firstName, \n        lastName: lastName, \n        cellPhone: cellPhone,\n        homePhone: homePhone,\n        email: email,\n        referral: referral,\n        county: county,\n        confirmed: confirmed,\n        address: {\n            line1: line1,\n            line2: line2,\n            city: city,\n            state: state,\n            zip: zip\n        }\n    });\n  },\n  saveProduct: function (group, name, code, price) {\n    console.log(group, name, code, price)\n    return axios.post('/api/products', {\n        group: group, \n        name: name, \n        code: code, \n        price: price\n    }\n    )\n},\nsaveJob: function (jobID, customerID, date, jobType, quantity, total) {\n  console.log(jobID, customerID, date, jobType, quantity, total)\n  return axios.post('/api/jobs', {\n      jobID: jobID,\n      customerID: customerID, \n      date: date, \n      serviceList: {\n        type: jobType, \n        quantity: quantity,\n        total: total\n      }\n  });\n},\n// addJob: function(req, res) {\n//   return axios.put(\"/api/customers\", {\n\n//   })\n// },\n\n\n  getCustomers: function () {\n    return axios.get('/api/customers');\n  },\n  getProducts: function () {\n    return axios.get('/api/products');\n  },\n  setLocation: function (name, latitude, longitude) {\n    return axios.put(\"/api/friends\", \n    { name: name , \n     latitude: latitude,\n     longitude: longitude })\n  },\n  updateCustomer: function (id, lastName, county) {\n    return axios.put(\"/api/customers/\" + id, \n     { _id: id },\n     {$push: {county: county} }\n    )},\n  getCustomer: function (search) {\n    return axios.get('/api/customers', search);\n  },\n  getProduct: function (productName) {\n    return axios.get('/api/products', productName);\n  },\n//   updateProduct: function (group, name, code, price) {\n//       return axios.put(\"/api/products\", {\n//       group: group, \n//       name: name, \n//       code: code, \n//       price: price\n//       }\n//       )\n//   }\n  deleteProduct: function (code) {\n      return axios.delete(\"/api/products\", code)\n  }\n// Tutorial.findByIdAndRemove(id)\n// .then(data => {\n//   if (!data) {\n//     res.status(404).send({\n//       message: `Cannot delete Tutorial with id=${id}. Maybe Tutorial was not found!`\n//     });\n//   } else {\n//     res.send({\n//       message: \"Tutorial was deleted successfully!\"\n//     });\n//   }\n// })\n// .catch(err => {\n//   res.status(500).send({\n//     message: \"Could not delete Tutorial with id=\" + id\n//   });\n// });\n// };\n\n\n}\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport api from '../../utils/api'\n\nfunction ClientForm() {\n    const [ firstName, setFirstName ] = useState('')\n    const [ lastName, setLastName ] = useState('')\n    const [ cellPhone, setCellPhone ] = useState('')\n    const [ homePhone, setHomePhone ] = useState('')\n    const [ email, setEmail ] = useState('')\n    const [ line1, setLine1 ] = useState('')\n    const [ line2, setLine2 ] = useState('')\n    const [ city, setCity ] = useState('')\n    const [ state, setState ] = useState('')\n    const [ zip, setZip ] = useState('')\n    const [ county, setCounty ] = useState(\"\")\n    const [ referral, setReferral ] = useState(\"\")\n    const [ confirmed, setConfirmed ] = useState()    // const [ customerID, setCustomerID ] = useState('')\n    const customerID = 7832\n  console.log(county)\n  console.log(referral)\n  console.log(confirmed)\n    function onSubmit(e) {\n        e.preventDefault();\n        api.saveCustomer(customerID, firstName, lastName, cellPhone, homePhone, email, referral, county, confirmed, line1, line2, city, state, zip)\n      }\n\n  \n// setCustomerID(7324)\n    return(\n        <Form>\n<Form.Group>\n  <Form.Row>\n    <Form.Label column=\"md\" md={2}>\n      First Name\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"First Name\"\n      onChange={(e) => setFirstName(e.target.value)} value={firstName}\n       />\n    </Col>\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"md\" md={2}>\n      Last Name\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"Last Name\" \n      onChange={(e) => setLastName(e.target.value)} value={lastName}\n       />\n    </Col>\n  </Form.Row>\n  \n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"md\" md={2}>\n      Cell Phone\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"Cell Number\" \n      onChange={(e) => setCellPhone(e.target.value)} value={cellPhone}\n      />\n    </Col>\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"md\" md={2}>\n      Home Phone\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"Home Number\"\n      onChange={(e) => setHomePhone(e.target.value)} value={homePhone}\n       />\n    </Col>\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"md\" md={2}>\n      Email\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"md\" type=\"email\" placeholder=\"Email\"\n      onChange={(e) => setEmail(e.target.value)} value={email} />\n    </Col>\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"md\" md={2}>\n      Address Line 1\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"Address 1\" \n      onChange={(e) => setLine1(e.target.value)} value={line1}\n      />\n    </Col>\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"md\" md={2}>\n      Address Line 2\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"Address 2\" \n      onChange={(e) => setLine2(e.target.value)} value={line2}\n      />\n    </Col>\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"md\" md={2}>\n      City, State, Zip\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"City\"\n      onChange={(e) => setCity(e.target.value)} value={city} />\n    </Col>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"State\" \n      onChange={(e) => setState(e.target.value)} value={state}/>\n    </Col>\n    <Col>\n      <Form.Control size=\"md\" type=\"text\" placeholder=\"Zip\"\n      onChange={(e) => setZip(e.target.value)} value={zip} />\n    </Col>\n\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n      <Col>\n\n  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n    <Form.Label>Referral</Form.Label>\n    <Form.Control as=\"select\" onChange={(e) => {setReferral(e.target.value)}}>\n      <option value=\"Google\">Google</option>\n      <option value=\"Friend\">Friend</option>\n      <option value=\"A little bird\">A little bird</option>\n      <option value=\"Google\">Your mom</option>\n      <option value=\"Google\">Add New</option>\n    </Form.Control>\n  </Form.Group>\n  </Col>\n  <Col>\n  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n    <Form.Label>County</Form.Label>\n    <Form.Control as=\"select\" onChange={(e) => {setCounty(e.target.value)}}>\n      <option value=\"Bergen\">Bergen</option>\n      <option value=\"Middlesex\">Middlesex</option>\n      <option value=\"California\">New Jersey</option>\n      <option value=\"Somewhere else\">Somewhere Else</option>\n      <option value=\"You heard me\">Come Party</option>\n    </Form.Control>\n  </Form.Group>\n  </Col>\n  <Col>\n  <Form.Check \n    type=\"switch\"\n    id=\"custom-switch\"\n    label=\"Confirmed Booking\"\n    onChange={(e) => {setConfirmed(e.target.value)}}\n  />\n  </Col>\nx\n  </Form.Row>\n\n</Form.Group>\n\n<Button type=\"submit\" variant=\"warning\" block onClick={onSubmit}>Save Customer</Button>{' '}\n\n</Form>\n\n    )\n}\n\nexport default ClientForm;\n\n//for address\n{/* <Form.Row>\n            <Form.Group as={Col} md=\"6\" controlId=\"validationFormik03\">\n              <Form.Label>City</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"City\"\n                name=\"city\"\n                value={values.city}\n                onChange={handleChange}\n                isInvalid={!!errors.city}\n              />\n\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.city}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik04\">\n              <Form.Label>State</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"State\"\n                name=\"state\"\n                value={values.state}\n                onChange={handleChange}\n                isInvalid={!!errors.state}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                {errors.state}\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group as={Col} md=\"3\" controlId=\"validationFormik05\">\n              <Form.Label>Zip</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Zip\"\n                name=\"zip\"\n                value={values.zip}\n                onChange={handleChange}\n                isInvalid={!!errors.zip}\n              />\n              \n\n              //</Form.Group>\n\nfor \"booked\" checkbox\n              <Form>\n  <Form.Check \n    type=\"switch\"\n    id=\"custom-switch\"\n    label=\"Check this switch\"\n  /></Form.Row> */}","import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card, Table } from 'react-bootstrap';\nimport api from '../../utils/api'\n\n\nfunction JobRow() {\n    const [ products, setProducts ] = useState([])\n    const [ quantity, setQuantity ] = useState(\"\")\n    const [ date, setDate ] = useState(\"\")\n    // const [ jobType, setJobType ] = useState({}) //product group\n    const [ index, setIndex ] = useState('')\n    const [ price, setPrice ] = useState(Number)\n    const [ code, setCode ] = useState(\"\")\n    const [ product, setProduct ] = useState({})\n\n    let total = quantity*price\n    let tax = (total*1.06625).toFixed(2)\n\n\n    let jobID = (Math.random()*1000).toFixed(0)\n    \n    let customerID = 7832\n\n    var today = new Date();\n    var dd = today.getDate();\n    var mm = today.getMonth()+1;\n    var yyyy = today.getFullYear();\n    if (dd < 10) {\n        dd = \"0\"+dd\n    }\n    if (mm < 10) {\n        mm = \"0\"+mm\n    }\n    today = yyyy+\"-\"+mm+\"-\"+dd;\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        api.saveJob(jobID, customerID, date, product, quantity, tax)\n    }\n\n    useEffect(() => {\n        api.getProducts()\n        .then(res => {\n          console.log(res.data)\n          setProducts(res.data);\n        })\n        .catch(error => {\n          console.log('Error getting fake data: ' + error);\n          })\n      \n      }, []);  \n\n      function handleChange(e) {\n        setProduct(products[parseFloat(e.target.value)])\n      }\n\n      useEffect(() => {\n        setPrice(product.price)\n        setCode(product.code)\n      }, [product])\n    \n\n    return(\n        <div>\n        {/* <Accordion>\n            <Card>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    Add Job\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n                <Form>\n                    <Form.Row>\n                    <Table striped bordered hover>\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\n                        <thead>\n                        <tr>\n                        <th>Choose Service</th>\n                        <th>Quantity</th>\n                        <th>Unit Price</th>\n                        <th>Total</th>\n                        <th>Total with Tax</th>\n                        <th>Date</th>\n\n                        </tr>\n                    </thead> */}\n                    <tbody >\n   <tr >\n\n    <Form.Control as=\"select\" custom                \n    onChange={handleChange} style={{width:\"250px\"}}\n>    \n{/* <Form.Label>Choose Service</Form.Label> */}\n\n<option  key=\"default\">Choose a Product</option>\n{products.map((item, index)=>{\n              return ( \n        <option  key={index} value={index} \n        >{item.name}</option>\n\n        )})}\n\n</Form.Control>\n<td style={{width:\"100px\"}}><input style={{width:\"50px\"}} defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity}/></td>\n<td style={{width:\"100px\"}}>${price}</td>\n<td style={{width:\"100px\"}}>${total.toFixed(2)}</td>\n<td style={{width:\"100px\"}}>${tax}</td>\n<td style={{width:\"200px\"}}><input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n</td>\n<td><Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm Job</Button>\n</td>\n<td><Button variant=\"warning\" type=\"submit\" >Estimate Job</Button>\n</td>\n </tr>\n   </tbody>\n\n  {/* </Form.Group>\n</Table>\n</Form.Row>\n</Form>\n</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n\n</Accordion> */}\n</div>\n\n\n    )\n}\n\nexport default JobRow;","import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Row, Button, Accordion, Card, Table } from 'react-bootstrap';\n// import { useAccordionToggle } from 'react-bootstrap/AccordionToggle';\nimport api from '../../utils/api'\nimport JobRow from '../JobRow.js'\n\n\nfunction JobForm() {\n    // const [ products, setProducts ] = useState([])\n    // const [ quantity, setQuantity ] = useState(\"\")\n    // const [ date, setDate ] = useState(\"\")\n    // // const [ jobType, setJobType ] = useState({}) //product group\n    // const [ index, setIndex ] = useState('')\n    // const [ price, setPrice ] = useState(Number)\n    // const [ code, setCode ] = useState(\"\")\n    // const [ product, setProduct ] = useState({})\n\n    // let total = quantity*price\n    // let tax = (total*1.06625).toFixed(2)\n\n\n    // let jobID = (Math.random()*1000).toFixed(0)\n    \n    // let customerID = 7832\n\n    // var today = new Date();\n    // var dd = today.getDate();\n    // var mm = today.getMonth()+1;\n    // var yyyy = today.getFullYear();\n    // if (dd < 10) {\n    //     dd = \"0\"+dd\n    // }\n    // if (mm < 10) {\n    //     mm = \"0\"+mm\n    // }\n    // today = yyyy+\"-\"+mm+\"-\"+dd;\n\n    // function handleSubmit(e) {\n    //     e.preventDefault()\n    //     api.saveJob(jobID, customerID, date, product, quantity, tax)\n    // }\n\n    // useEffect(() => {\n    //     api.getProducts()\n    //     .then(res => {\n    //       console.log(res.data)\n    //       setProducts(res.data);\n    //     })\n    //     .catch(error => {\n    //       console.log('Error getting fake data: ' + error);\n    //       })\n      \n    //   }, []);  \n\n    //   function handleChange(e) {\n    //     setProduct(products[parseFloat(e.target.value)])\n    //   }\n\n    //   useEffect(() => {\n    //     setPrice(product.price)\n    //     setCode(product.code)\n    //   }, [product])\n// function handleClick(e) {\n//     e.preventDefault();\n//     return (new JobRow)\n// }\n    \n  \n    return (\n        <div>\n                    <Accordion>\n            <Card>\n                <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n                    Add Job\n                    </Accordion.Toggle>\n                </Card.Header>\n                <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n                <Form>\n                    <Form.Row>\n                    <Table striped bordered hover>\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\n                        <thead>\n                        <tr>\n                        <th style={{width:\"250px\"}}>Choose Service</th>\n                        <th style={{width:\"100px\"}}>Quantity</th>\n                        <th style={{width:\"100px\"}}>Unit Price</th>\n                        <th style={{width:\"100px\"}}>Total</th>\n                        <th style={{width:\"100px\"}}>Total with Tax</th>\n                        <th style={{width:\"200px\"}}>Date</th>\n\n                        </tr>\n                    </thead>\n\n                    <JobRow />        \n        <JobRow />\n        <JobRow />\n\n\n                    </Form.Group>\n</Table>\n</Form.Row>\n</Form>\n</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n\n</Accordion>\n\n\n        <Button block variant=\"link\" type=\"button\" onClick={(e) => {return <JobRow />}}>Add Product</Button>\n        </div>\n//         // <div>\n//             {/* <Accordion>\n//                 <Card>\n//                     <Card.Header>\n//                         <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n//                         Add Job\n//                         </Accordion.Toggle>\n//                     </Card.Header>\n//                     <Accordion.Collapse eventKey=\"0\">\n//                 <Card.Body>\n//                     <Form>\n//                         <Form.Row>\n//                         <Table striped bordered hover>\n//                             <Form.Group controlId=\"exampleForm.SelectCustom\">\n//                             <thead>\n//                             <tr>\n//                             <th>Choose Service</th>\n//                             <th>Quantity</th>\n//                             <th>Unit Price</th>\n//                             <th>Total</th>\n//                             <th>Total with Tax</th>\n//                             <th>Date</th>\n\n//                             </tr>\n//                         </thead> */}\n// {/* <tbody style={{width: \"100%\"}}>\n//    <tr style={{width: \"100%\"}}>\n\n//     <Form.Control as=\"select\" custom                \n//     onChange={handleChange} \n//                      */}\n// {/* >    <Form.Label>Choose Service</Form.Label>\n\n//         <option key=\"default\">Choose a Product</option>\n//         {products.map((item, index)=>{\n//                       return ( \n//                 <option key={index} value={index} \n//                 >{item.name}</option>\n\n//                 )})}\n\n//     </Form.Control>\n//     <td><input defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity}/></td>\n//     <td>${price}</td>\n//     <td>${total.toFixed(2)}</td>\n//     <td>${tax}</td>\n//     <td><input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n// </td>\n//     <td><Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm Job</Button>\n// </td>\n// <td><Button variant=\"warning\" type=\"submit\" >Estimate Job</Button>\n// </td> */}\n\n//     {/* </tr>\n//     <tr size=\"lg\">\n//         <Button block variant=\"link\" type=\"submit\" >Add Product</Button>\n//     </tr>\n//     </tbody>\n\n//   </Form.Group>\n// </Table> */}\n//   {/* </Col> */}\n//   {/* <Col sm={2}>\n\n// <Form.Group controlId=\"exampleForm.SelectCustom\">\n//   <Form.Label>Quantity</Form.Label>\n//   <Form.Control defaultValue={1} onChange={(e) => setQuantity(parseInt(e.target.value))} value={quantity} />\n// </Form.Group>\n// </Col>\n// <Col>\n// <p>Unit Price</p>\n// <p>${price}</p>\n// </Col>\n// <Col>\n// <p>Total</p>\n\n//      <p>${total.toFixed(2)}</p> \n//      {/* <p></p>} */}\n// {/* </Col>\n// <Col>\n// <p>With Tax</p>\n// <p>${tax}</p>\n// </Col>\n// <Col>\n// <p>Date</p>\n// <input type=\"date\" min={today}onChange={(e) => setDate(e.target.value)}></input>\n// </Col> */}\n// {/* <Col>\n// <Button variant=\"success\" type=\"submit\" onClick={handleSubmit}>Confirm</Button>\n// </Col>  */}\n\n\n\n\n//   {/* </Form.Row>\n// </Form>\n//           </Card.Body>\n//     </Accordion.Collapse>\n//   </Card>\n//   <Card>\n//     <Card.Header>\n//       <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n//         Click me!\n//       </Accordion.Toggle>\n//     </Card.Header>\n//     <Accordion.Collapse eventKey=\"1\">\n//       <Card.Body>Hello! I'm another body</Card.Body>\n//     </Accordion.Collapse>\n//   </Card>\n// </Accordion>\n// </div> */}\n\n    )\n}\n\nexport default JobForm;","import React from 'react';\nimport ClientForm from '../components/ClientForm.js';\nimport JobForm from '../components/JobForm.js/index.js';\n\n\n\nfunction NewClient() {\n    return(\n        <div>\n        <ClientForm />\n        <JobForm />\n        </div>\n    )\n}\n\nexport default NewClient;","import React, { useEffect, useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nfunction AdminMenu() {\n\n    return(\n        <Container>\n            <Row>\n<Col>\n  <Button variant=\"primary\" size=\"lg\" block style={{backgroundColor: \"lightgray\", height: \"400px\"}} href=\"/newcustomer\">\n    New Customer\n  </Button>\n  <Button variant=\"secondary\" size=\"lg\" block>\n    All Customers\n  </Button>\n</Col>\n<Col>\n  <Button variant=\"primary\" size=\"lg\" block href=\"/newjob\">\n    New Order\n  </Button>\n  <Button variant=\"secondary\" size=\"lg\" block>\n    All Orders\n  </Button>\n</Col>\n</Row>\n<Row>\n<Button variant=\"warning\" size=\"lg\" href=\"/admin/addproduct\">\n    Add Products\n  </Button>\n  <Button variant=\"success\" size=\"lg\" block>\n    Order Details\n  </Button>\n\n</Row>\n</Container>\n    )\n}\n\nexport default AdminMenu;","import React, { Component } from \"react\";\nimport AdminMenu from \"../components/AdminMenu.js/index\";\n\n\nfunction Admin() {\n\n    return(\n        <AdminMenu />\n    )\n}\n\nexport default Admin;","import React, { useState } from 'react';\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport api from '../../utils/api'\n\n\nfunction AddProductForm() {\n    const [ group, setGroup ] = useState('')\n    const [ name, setName ] = useState('')\n    const [ code, setCode ] = useState('')\n    const [ price, setPrice ] = useState('')\n\n    function onSubmit() {\n        api.saveProduct(group, name, code, price)\n    }\n\n    return ( \n        \n        <Form>\n<Form.Group>\n  <Form.Row>\n    <Form.Label column=\"lg\" lg={2}>\n      Product Group\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"lg\" type=\"text\" placeholder=\"Product Group\"\n      onChange={(e) => setGroup(e.target.value)} value={group}\n       />\n    </Col>\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"lg\" lg={2}>\n       Product Name\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"lg\" type=\"text\" placeholder=\"Product Name\" \n      onChange={(e) => setName(e.target.value)} value={name}\n       />\n    </Col>\n  </Form.Row>\n  \n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"lg\" lg={2}>\n      Product Code\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"lg\" type=\"text\" placeholder=\"Product Coder\" \n      onChange={(e) => setCode(e.target.value)} value={code}\n      />\n    </Col>\n  </Form.Row>\n\n  <hr />\n\n  <Form.Row>\n    <Form.Label column=\"lg\" lg={2}>\n      Selling Price\n    </Form.Label>\n    <Col>\n      <Form.Control size=\"lg\" type=\"text\" placeholder=\"Selling Price\"\n      onChange={(e) => setPrice(e.target.value)} value={price}\n       />\n    </Col>\n  </Form.Row>\n\n  <hr />\n</Form.Group>\n<Button type=\"submit\" onClick={onSubmit}>Add Product</Button>\n</Form>\n    )\n}\n\nexport default AddProductForm; ","import React, { useEffect, useState } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport api from  '../../utils/api'\nimport { Form, Col, Row, Button } from 'react-bootstrap';\n\nfunction ProductTable() {\n    const [allData,setAllData] = useState([]);\n    const [ upholstery, setUpholstery ] = useState([]);\n    const [ carpet, setCarpet ] = useState([]);\n\n\n    useEffect(() => {\n        console.log()\n        api.getProducts()\n        .then(res => {\n          console.log(res.data)\n          setAllData(res.data);\n          console.log(allData)\n        })\n        .catch(error => {\n          console.log('Error getting fake data: ' + error);\n          })\n      \n      }, []);\n      console.log(allData)\n      for (let i=0; i < allData.length; i++) {\n          if (allData[i].group === \"Upholstery\") {\n            upholstery.push(allData[i])\n          } else if (allData[i].group === \"Carpet\") {\n            carpet.push(allData[i])\n          }\n      }\n      function onDelete(e) {\n        api.deleteProduct()\n    }\n\n\n    return ( \n<Row>\n    <Col>\n    <h3>Carpet</h3>\n\n<Table striped bordered hover size=\"sm\">\n  <thead>\n    <tr>\n      <th>Product Code</th>\n      <th>Product Name</th>\n      <th>Selling Price</th>\n      <th>Actions</th>\n    </tr>\n  </thead>\n  <tbody>\n      {carpet.map((data)=> {\n                    return (\n\n                // (data.group === \"Upholstery\") ?\n\n            <tr key={data.code}>\n            <td>{data.code}</td>\n            <td>{data.name}</td>\n            <td>${data.price}</td>\n            <td><Button size=\"sm\" variant=\"info\">Update</Button>\n            <Button onClick={onDelete} style={{marginLeft: \"10px\"}} size=\"sm\" variant=\"danger\">Delete</Button></td>\n          </tr>\n    //   : <tr></tr>\n          ) \n      })}\n\n  </tbody>\n</Table>  \n</Col> \n<Col>\n<h3>Upholstery</h3>\n\n<Table striped bordered hover size=\"sm\">\n\n  <thead>\n    <tr>\n      <th>Product Code</th>\n      <th>Product Name</th>\n      <th>Selling Price</th>\n      <th>Actions</th>\n\n    </tr>\n  </thead>\n  <tbody>\n      {upholstery.map((data)=> {\n          return (\n            // (data.group === \"Carpet\") ?\n\n            <tr key={data.code}>\n            <td>{data.code}</td>\n            <td>{data.name}</td>\n            <td>{data.price}</td>\n            <td><Button size=\"sm\" variant=\"info\">Update</Button>\n            <Button style={{marginLeft: \"10px\"}} size=\"sm\" variant=\"danger\">Delete</Button></td>\n\n          </tr>\n            // : <tr></tr>\n\n          )\n      })}\n\n  </tbody>\n</Table>  \n</Col> \n</Row>     \n    )\n}\n\nexport default ProductTable;","import React, { Component } from \"react\";\nimport AddProductForm from \"../components/AddProductForm.js/index\";\nimport ProductTable from \"../components/ProductTable\"\n\n\nfunction AddProduct() {\n\n    return(\n        <div>\n        <AddProductForm />\n        <ProductTable />\n        </div>\n    )\n}\n\nexport default AddProduct;","import React, { createContext, useState } from \"react\";\n\nexport const CurrCustContext = createContext();\n\n// This context provider is passed to any component requiring the context\nexport const CurrCustProvider = ({ children }) => {\n  const [ currCust, setCurrCust ] = useState( {} );\n  const [ currJob, setCurrJob ] = useState( {} )\n  console.log(currCust)\n  console.log(currJob)\n//   const [location, setLocation] = useState(\"Mars\");\n\n  return (\n    <CurrCustContext.Provider\n      value={{\n        currCust,\n        setCurrCust,\n      }}\n    >\n      {children}\n    </CurrCustContext.Provider>\n  );\n};\n\n\n\n\n\n","import React, { useContext, useState } from 'react';\nimport { Col, Row, Button, Form, Card } from 'react-bootstrap'\nimport api from '../../utils/api';\nimport { CurrCustContext } from '../../utils/currentCustomerContext';\nimport axios from 'axios'\n\nfunction UpdateForm() {\n    const [ lastName, setLastName ] = useState(\"\")\n    const [ county, setCounty ] = useState(\"\")\n\n    const context = useContext(CurrCustContext)\n    const customer = context.currCust[0]\n    const id = customer._id\n\n    console.log(id, lastName, county)\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        \n        // axios.put(\"/api/customers\", county)\n        // .then(response => console.log(response.data));\n        api.updateCustomer(id, lastName, county)\n        console.log(lastName, county)\n    }\n    return ( \n        <Card>\n            <Card.Body >\n<Form>\n<Row className=\"mb-3\">\n\n<Form.Group as={Col} controlId=\"formGridID\">\n  <Form.Label>Customer ID</Form.Label>\n  <Form.Control type=\"text\" defaultValue={customer.customerID} placeholder=\"Enter ID\" />\n</Form.Group>\n\n <Form.Group as={Col} controlId=\"formGridFirst\">\n  <Form.Label>First Name</Form.Label>\n  <Form.Control type=\"text\" defaultValue={customer.firstName} />\n</Form.Group>\n\n<Form.Group as={Col} controlId=\"formGridLast\">\n  <Form.Label>Last Name</Form.Label>\n  <Form.Control onChange={(e) => setLastName(e.target.value)} type=\"text\" defaultValue={customer.lastName}></Form.Control> \n</Form.Group>\n\n</Row>\n\n  <Row className=\"mb-3\">\n\n    <Form.Group as={Col} controlId=\"formGridEmail\">\n      <Form.Label>Email</Form.Label>\n      <Form.Control type=\"email\" defaultValue={customer.email} />\n    </Form.Group>\n\n     <Form.Group as={Col} controlId=\"formGridCounty\">\n      <Form.Label>County</Form.Label>\n      <Form.Control onChange={(e) => setCounty(e.target.value)} type=\"text\" defaultValue={customer.county} />\n    </Form.Group>\n  </Row>\n\n  <Row>\n\n  <Form.Group as={Col} controlId=\"formGridPhone\">\n      <Form.Label>Cell Phone</Form.Label>\n      <Form.Control type=\"text\" defaultValue={customer.cellPhone} />\n    </Form.Group>\n  <Form.Group as={Col} controlId=\"formGridPhone\">\n      <Form.Label>Home Phone</Form.Label>\n      <Form.Control type=\"text\" defaultValue={customer.homePhone} />\n    </Form.Group>\n  </Row>\n\n\n  <Form.Group className=\"mb-3\" controlId=\"formGridAddress1\">\n    <Form.Label>Address</Form.Label>\n    <Form.Control defaultValue={customer.address.line1} />\n  </Form.Group>\n\n  <Form.Group className=\"mb-3\" controlId=\"formGridAddress2\">\n    <Form.Label>Address 2</Form.Label>\n    <Form.Control defaultValue={customer.address.line2} />\n  </Form.Group>\n\n  <Row className=\"mb-3\">\n    <Form.Group as={Col} controlId=\"formGridCity\">\n      <Form.Label>City</Form.Label>\n      <Form.Control defaultValue={customer.address.city} />\n    </Form.Group>\n    \n\n     <Form.Group as={Col} controlId=\"formGridState\">\n     <Form.Label>State</Form.Label>\n      <Form.Control defaultValue={customer.address.state} />\n      </Form.Group>\n\n     <Form.Group as={Col} controlId=\"formGridZip\">\n       <Form.Label>Zip</Form.Label>\n       <Form.Control defaultValue={customer.address.zip} />\n     </Form.Group>\n   </Row>\n    </Form>\n\n<Button onClick={handleSubmit} type=\"submit\" variant=\"info\">Update Info</Button>\n\n</Card.Body>\n        </Card>\n\n)\n}\n\nexport default UpdateForm;","import React, { useState, useEffect, useContext } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport UpdateForm from '../UpdateForm';\n\n\nfunction UpdateModal() {\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => {\n        setShow(true);\n        \n    }\n  \n    return (\n      <>\n        <Button variant=\"info\" onClick={handleShow}>\n          Update\n        </Button>\n  \n        <Modal\n          show={show}\n          onHide={handleClose}\n          backdrop=\"static\"\n          keyboard={false}\n          centered\n          size=\"lg\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>Update Customer Details</Modal.Title>\n          </Modal.Header>\n          {/* <Modal.Body>\n            I will not close if you click outside me. Don't even try to press\n            escape key. */}\n            <UpdateForm />\n          {/* </Modal.Body> */}\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\">Understood</Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\n  export default UpdateModal;","import React, { useEffect, useState, useContext } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport api from  '../../utils/api'\nimport { Form, Col, Row, Button } from 'react-bootstrap';\nimport ClientForm from '../ClientForm.js';\nimport { CurrCustContext } from '../../utils/currentCustomerContext';\nimport UpdateModal from '../UpdateModal';\n\nfunction CustomerTable() {\n    const [allData,setAllData] = useState([]);\n    const [filteredData,setFilteredData] = useState(allData);\n\n    const context = useContext(CurrCustContext)\n\n    const handleSearch = (event) =>{\n        let value = event.target.value;\n        let result = [];\n        console.log(value)\n        result = allData.filter((data) => {\n          return data.firstName.search(value) !== -1;\n        });\n        console.log(result)\n        if (result.length < 1) {\n          let lastNameResult =[];\n        lastNameResult = allData.filter((data) => {\n          return data.lastName.search(value) !== -1;\n        });\n        result = lastNameResult;\n    }\n        if (result.length < 1) {\n            let cityResult =[];\n          cityResult = allData.filter((data) => {\n            return data.address.city.search(value) !== -1;\n          });\n          result = cityResult;\n  \n    }\n    if (result.length < 1) {\n      let zipResult =[];\n    zipResult = allData.filter((data) => {\n      return data.address.zip.toString().search(parseFloat(value)) !== -1;\n    });\n    result = zipResult;\n\n}\nif (result.length < 1) {\n  let idResult =[];\nidResult = allData.filter((data) => {\n  return data.customerID.toString().search(parseFloat(value)) !== -1;\n});\nresult = idResult;\n\n}\n\nif (result.length < 1) {\n  let emailResult =[];\nemailResult = allData.filter((data) => {\n  return data.email.search(value) !== -1;\n});\nresult = emailResult;\n\n}\n        console.log(result)\n        // }\n        setFilteredData(result);\n        context.setCurrCust(result)\n      }\n    \n    useEffect(() => {\n        console.log()\n        api.getCustomers()\n        .then(res => {\n          console.log(res.data)\n          setAllData(res.data);\n          setFilteredData(res.data);\n\n          console.log(allData)\n        })\n        .catch(error => {\n          console.log('Error getting fake data: ' + error);\n          })\n      \n      }, []);\n      console.log(allData)\n      console.log(filteredData)\n\n  function handleClick(e) {\n    e.preventDefault();\n}\n\n\n      function onDelete(e) {\n        api.deleteProduct()\n    }\n\n\n    return ( \n        <div>\n        <Form>\n<Row>\n<Col lg={11}>\n  <Form.Group controlId=\"formBasicEmail\">\n  \n    \n    <Form.Control type=\"name\" placeholder=\"Search\"\n    onChange={(event) =>handleSearch(event)}\n    // onChange={(e) => setSearch(e.target.value)} value={search} \n    />\n    \n    </Form.Group>\n    </Col>\n  <Col lg={1}>\n  <Button variant=\"primary\" type=\"submit\" onClick={handleClick} block>\n    Search\n  </Button>\n  </Col>\n  </Row>\n</Form>\n\n{filteredData.length > 0 ? \n\n<Table striped bordered hover size=\"sm\">\n  <thead>\n    <tr>\n      <th>Customer ID</th>\n      <th>Customer Name</th>\n      <th>Cell Phone</th>\n      <th>Home Phone</th>\n      <th>Email</th>\n      <th>Address</th>\n      <th>Jobs</th>\n\n    </tr>\n  </thead>\n  <tbody>\n      {filteredData.map((data)=> {\n                    return (\n\n                // (data.group === \"Upholstery\") ?\n\n            <tr key={data._id}>\n            <td>{data.customerID}</td>\n            <td>{data.lastName}, {data.firstName}</td>\n            <td>{data.cellPhone}</td>\n            <td>{data.homePhone}</td>\n            <td>{data.email}</td>\n            <td>{data.address.line1}, {data.address.line2}, {data.address.city}, {data.address.state}, {data.address.zip}</td>\n            <td>{data.jobs}</td>\n\n            <td>\n              {/* <Button size=\"sm\" variant=\"info\">Update</Button> */}\n              <UpdateModal  />\n            <Button onClick={onDelete} style={{marginLeft: \"10px\"}} size=\"sm\" variant=\"danger\">Delete</Button></td>\n          </tr>\n    //   : <tr></tr>\n          ) \n      })}\n\n  </tbody>\n</Table>  \n:\n<div>\n<p>Please register this new customer.</p>\n<ClientForm />\n</div>\n}\n</div>\n    )\n}\n\nexport default CustomerTable;","import React from 'react';\nimport CustomerTable from '../components/CustomerTable';\n\nfunction Customers() {\n    return ( \n        <CustomerTable />\n    )\n}\n\nexport default Customers;","import React from 'react';\nimport Nav from 'react-bootstrap/Nav'\n\nfunction Navigation() {\n    return ( \n<Nav className=\"justify-content-center\"  fill={true} style={{backgroundColor: \"light-blue\"}} variant=\"pills\">\n<Nav.Item>\n  <Nav.Link \n//   onClick={(e) => {e.preventDefault()}} \nhref=\"/home\">Menu\n    </Nav.Link>\n</Nav.Item>\n<Nav.Item>\n  <Nav.Link eventKey=\"link-1\" href=\"/customers\">Customers</Nav.Link>\n</Nav.Item>\n<Nav.Item>\n  <Nav.Link eventKey=\"link-2\" href=\"/jobs\">Jobs</Nav.Link>\n</Nav.Item>\n<Nav.Item>\n  <Nav.Link eventKey=\"disabled\" disabled>\n    Disabled\n  </Nav.Link>\n</Nav.Item>\n</Nav>  \n)\n}\n\nexport default Navigation;","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\"\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport NewClient from \"./pages/NewClient\";\nimport NewJob from \"./pages/NewJob\"\nimport Admin from \"./pages/Admin\";\nimport AddProduct from \"./pages/AddProduct\";\nimport Customers from \"./pages/Customers\";\nimport Navigation from \"./components/Nav\";\nimport { Card } from 'react-bootstrap';\nimport { CurrCustProvider } from \"./utils/currentCustomerContext\"\n// import { AllCustomersProvider } from \"./utils/allCustomersContex\"\n\n\nfunction App() {\n  return (\n    <div>\n      <Navigation />\n      <CurrCustProvider>\n      <Card style={{margin: \"10px\"}}>\n      <Card.Body>\n    <Router>\n      <Switch>\n          <Route exact path={[\"/\", \"/home\"]}>\n            <Home />\n          </Route>\n          <Route exact path={[\"/newcustomer\"]}>\n            <NewClient />\n          </Route>\n          {/* <Route exact path={[\"/newjob\"]}>\n            <NewJob />\n          </Route> */}\n          <Route exact path={[\"/customers\"]}>\n            <Customers />\n          </Route>\n\n          <Route exact path={[\"/admin\"]}>\n            <Admin />\n          </Route>\n          <Route exact path={[\"/admin/addproduct\"]}>\n            <AddProduct />\n          </Route>\n\n\n\n      </Switch>\n    </Router>\n    </Card.Body>\n    </Card>\n    </CurrCustProvider>\n    {/* // </AllCustomersProvider> */}\n    </div>\n  )\n   \n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n","module.exports = __webpack_public_path__ + \"static/media/logo.495d93cc.svg\";"],"sourceRoot":""}